{="<?php"|noescape}

declare(strict_types=1);

use Psr\Http\Message\ResponseInterface as Response;
use Psr\Http\Message\ServerRequestInterface as Request;
use Slim\App;

function response($response, $code, $content) {
    $response->withStatus($code)->getBody()->write(json_encode($content));
    return $response;
}

return function (App $app) {
    $app->options('/{l}routes:.*{r}', function (Request $request, Response $response) {
        // CORS Pre-Flight OPTIONS Request Handler
        return $response;
    });

    $app->add(function ($request, $handler) {
        $response = $handler->handle($request);
        return $response
            ->withHeader('Access-Control-Allow-Origin', '*')
            ->withHeader('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Accept, Origin, Authorization')
            ->withHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');
    });

{foreach $actions as $action}
    $app->{$action['method']}('{$action['url']}', function (Request $request, Response $response) {
        {if in_array($action['method'], ['post', 'put'])}$data = $request->getParsedBody(){else}$data = $request->getQueryParams(){/if};
        {if $action['auth']}$user = \Firebase\JWT\JWT::decode($request->getHeaderLine('Authorization'), new \Firebase\JWT\Key($this->get('jwt'), 'HS256'));{/if}
{foreach $action['commands'] as $command}
        {$command|noescape};
{/foreach}
    });
{/foreach}
};
